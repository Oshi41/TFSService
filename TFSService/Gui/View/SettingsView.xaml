<UserControl x:Class="Gui.View.SettingsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Gui.View"
             xmlns:vm="clr-namespace:Gui.ViewModels.DialogViewModels"
             xmlns:s="clr-namespace:Gui.Settings"
             xmlns:c="clr-namespace:Gui.Converters"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:p="clr-namespace:Gui.Properties"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="400"
             d:DataContext="{d:DesignInstance Type={x:Type vm:SettingsViewModel}}">

    <UserControl.Resources>
        <ResourceDictionary>

            <Style x:Key="CardStyle"
                   TargetType="{x:Type materialDesign:Card}"
                   BasedOn="{StaticResource {x:Type materialDesign:Card}}">
                <Setter Property="Padding" Value="5" />
                <Setter Property="Margin" Value="5" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter Property="MinWidth" Value="150" />
            </Style>

            <ObjectDataProvider x:Key="wroteOffEnums" MethodName="GetValues"
                                ObjectType="{x:Type system:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="s:WroteOffStrategy" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <c:DescriptionConverter x:Key="DescriptionConverter" />

            <c:InvertBoolConverter x:Key="InvertBoolConverter" />

        </ResourceDictionary>
    </UserControl.Resources>


    <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                  VerticalScrollBarVisibility="Auto"
                  Padding="7"
                  Background="White">

        <!-- Основная панель, вертикальная -->
        <StackPanel Orientation="Vertical">

            <!-- Заголовок настроек -->
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <TextBlock Text="{Binding Path=Name}"
                           FontWeight="Bold"
                           Margin="0,0,10,0" />

                <TextBlock Grid.Row="1"
                           Text="{Binding Path=Connection}"
                           TextTrimming="WordEllipsis"
                           TextDecorations="Underline"
                           ToolTip="{Binding Path=Connection}" />

                <Button Grid.Column="1"
                        Grid.RowSpan="2"
                        Content="{x:Static p:Resources.AS_Add}"
                        Margin="10,0,0,0"
                        Command="{Binding Path=ConnectCommand}" />
            </Grid>

            <DockPanel Margin="0,20,0,10">
                <Button DockPanel.Dock="Right"
                        Content="..."
                        VerticalAlignment="Center"
                        Height="{Binding ElementName=LogText, Path=ActualHeight}"
                        Command="{Binding Path=ChooseLogFileCommand}" />

                <TextBox x:Name="LogText"
                         IsReadOnly="True"
                         Text="{Binding Path=LogsPath, UpdateSourceTrigger=PropertyChanged}"
                         materialDesign:HintAssist.Hint="{x:Static p:Resources.AS_LogPath}"
                         materialDesign:HintAssist.IsFloating="True" />
            </DockPanel>


            <Grid Grid.IsSharedSizeScope="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition SharedSizeGroup="G1" />
                </Grid.RowDefinitions>

                <materialDesign:Card Style="{StaticResource CardStyle}"
                                     Grid.Row="0" Grid.Column="0">
                    <StackPanel Orientation="Vertical"
                                Margin="0,0,5,20">
                        <CheckBox x:Name="TfsCapacityCheck"
                                  Content="{x:Static p:Resources.AS_GetCapacityFromTfs}"
                                  IsChecked="{Binding Path=CapacityByUser, Converter={StaticResource InvertBoolConverter}}" />

                        <TextBlock Text="{x:Static p:Resources.AS_DailyWorkHours}"
                                   Margin="0,5" />
                        <TextBox
                            Text="{Binding Path=Capacity, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                            IsReadOnly="{Binding ElementName=TfsCapacityCheck, Path=IsChecked}"
                            HorizontalAlignment="Left"
                            Width="50" />

                    </StackPanel>
                </materialDesign:Card>

                <materialDesign:Card Style="{StaticResource CardStyle}"
                                     Grid.Row="0" Grid.Column="1">

                    <StackPanel Orientation="Vertical"
                                Margin="0,0,5,20">
                        <TextBlock Text="{x:Static p:Resources.AS_WorkDayTime}"
                                   Margin="0,5" />
                        <TextBox
                            Text="{Binding Path=DayDuration, 
                                     Mode=TwoWay,
                                     ValidatesOnDataErrors=True, 
                                     UpdateSourceTrigger=PropertyChanged,
                                     StringFormat={}{0:hh}:{0:mm}}"
                            HorizontalAlignment="Left"
                            Width="50" />
                    </StackPanel>
                </materialDesign:Card>

                <materialDesign:Card Style="{StaticResource CardStyle}"
                                     Grid.Row="1" Grid.Column="0">

                    <StackPanel Orientation="Vertical"
                                Margin="0,0,5,20">
                        <TextBlock Text="{x:Static p:Resources.AS_ItemUpdatePeriod}"
                                   TextWrapping="Wrap"
                                   Margin="0,5" />
                        <TextBox Text="{Binding Path=ItemMinutesCheck, UpdateSourceTrigger=PropertyChanged}"
                                 HorizontalAlignment="Left"
                                 Width="50" />
                    </StackPanel>
                </materialDesign:Card>

                <materialDesign:Card Style="{StaticResource CardStyle}"
                                     Grid.Row="1" Grid.Column="1">

                    <StackPanel Orientation="Vertical"
                                Margin="0,0,5,20">
                        <TextBlock Text="{x:Static p:Resources.AS_OldReviewDays}"
                                   TextWrapping="Wrap"
                                   Margin="0,5" />
                        <TextBox Text="{Binding Path=ItemMinutesCheck, UpdateSourceTrigger=PropertyChanged}"
                                 HorizontalAlignment="Left"
                                 Width="50" />
                    </StackPanel>
                </materialDesign:Card>


            </Grid>

            <materialDesign:Card Style="{StaticResource CardStyle}">
                <StackPanel Orientation="Vertical">
                    <TextBlock Text="{x:Static p:Resources.AS_WroteOffStrategy}"
                               FontWeight="Bold" />

                    <TextBlock Text="{x:Static p:Resources.AS_WroteOffStrategy_Asking}"
                               TextWrapping="Wrap" />

                    <ComboBox Margin="0,10"
                              ItemsSource="{Binding Source={StaticResource wroteOffEnums}}"
                              SelectedValue="{Binding Path=Strategy}"
                              IsSynchronizedWithCurrentItem="True">
                        <ComboBox.ItemTemplate>
                            <DataTemplate DataType="{x:Type ComboBoxItem}">
                                <TextBlock Text="{Binding Converter={StaticResource DescriptionConverter}}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>


                </StackPanel>
            </materialDesign:Card>

            <materialDesign:Card Style="{StaticResource CardStyle}">
                <StackPanel Orientation="Vertical">

                    <TextBlock Text="{x:Static p:Resources.AS_WorkItemRules}"
                               HorizontalAlignment="Left"
                               FontWeight="Bold" />

                    <ContentControl Content="{Binding Path=RuleEditor}" />

                </StackPanel>
            </materialDesign:Card>

        </StackPanel>
    </ScrollViewer>

</UserControl>