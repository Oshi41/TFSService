<Window x:Class="Gui.View.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Gui.View"
        xmlns:viewmodels="clr-namespace:Gui.ViewModels"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:p="clr-namespace:Gui.Properties"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:behaviors="clr-namespace:Gui.Behaviors"
        xmlns:constants="clr-namespace:TfsAPI.Constants;assembly=TfsAPI"
        xmlns:controls="clr-namespace:Gui.View.Controls"
        mc:Ignorable="d"
        Height="400" Width="600"
        Title="{Binding Path=StatsViewModel.Name}">

    <Window.DataContext>
        <viewmodels:MainViewModel />
    </Window.DataContext>

    <Window.Resources>
        <controls:BindProxy x:Key="BindProxy"
                            Data="{Binding}"/>
    </Window.Resources>


    <materialDesign:DialogHost IsOpen="{Binding Path=IsBusy}">

        <materialDesign:DialogHost.DialogContent>
            <StackPanel Orientation="Vertical"
                        Margin="10">
                <ProgressBar Style="{StaticResource MaterialDesignCircularProgressBar}"
                             Maximum="10"
                             Value="5"
                             IsIndeterminate="True" />
                <TextBlock Text="{x:Static p:Resources.AS_Load}"
                           Margin="0,5" />
            </StackPanel>
        </materialDesign:DialogHost.DialogContent>

        <Grid >

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Menu FontSize="12"
                  Grid.Row="0">
                <MenuItem Header="{x:Static p:Resources.AS_Program}">
                    <MenuItem Header="{x:Static p:Resources.AS_Update}"
                              Command="{Binding Path=UpdateCommand}">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="Update" />
                        </MenuItem.Icon>
                    </MenuItem>

                    <MenuItem Header="{x:Static p:Resources.AS_History}"
                              Command="{Binding Path=ShowMonthlyCommand}">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="History" />
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>

                <MenuItem Header="{x:Static p:Resources.AS_Actions}">
                    <MenuItem Header="{x:Static p:Resources.AS_WriteOffHours}"
                              Command="{Binding Path=WriteOffHoursCommand}"/>
                    <Separator/>
                    <MenuItem Header="{x:Static p:Resources.AS_CloseCompletedReviewes}"
                              Command="{Binding Path=CodeResponsesViewModel.CloseReviewes}" />
                    <MenuItem Header="{x:Static p:Resources.AS_CloseOldReviews}"
                              Command="{Binding Path=CodeResponsesViewModel.CloseOldReviewes}" />
                </MenuItem>

                <MenuItem Header="{x:Static p:Resources.AS_Settings}"
                          Command="{Binding Path=SettingsCommand}" />

            </Menu>

            <DockPanel Grid.Row="1">
                <local:FilterView DataContext="{Binding Path=StatsViewModel.Filter}"
                                  DockPanel.Dock="Left"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center"
                                  Margin="5"/>
                <TextBlock Text="{x:Static p:Resources.AS_MyWorkItems}"
                           VerticalAlignment="Center"
                           Margin="10,0,0,0"/>
            </DockPanel>

            <ListView Grid.Row="2"
                      BorderThickness="2"
                      BorderBrush="Black"
                      ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                      ScrollViewer.VerticalScrollBarVisibility="Auto"
                      HorizontalContentAlignment="Stretch"
                      HorizontalAlignment="Stretch"
                      ItemsSource="{Binding Path=StatsViewModel.MyItems}" >
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}"
                           BasedOn="{StaticResource {x:Type ListViewItem}}">

                        <Setter Property="ContextMenu" Value="{x:Null}"/>

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=Item.Type.Name}"
                                         Value="{x:Static constants:WorkItemTypes.Task}">
                                <Setter Property="ContextMenu">
                                    <Setter.Value>
                                        <ContextMenu>
                                            <MenuItem Header="{x:Static p:Resources.AS_WriteOffHours}"
                                                      Command="{Binding Source={StaticResource BindProxy}, Path=Data.WriteOffHoursCommand}"
                                                      CommandParameter="{Binding}"/>
                                        </ContextMenu>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>

            <materialDesign:Card Grid.Row="3">

                <StackPanel Orientation="Vertical"
                            Background="Transparent"
                            Margin="5,0,5,10">
                    <StackPanel.ToolTip>
                        <ToolTip>
                            <StackPanel Orientation="Vertical"
                                    Margin="5">

                                <TextBlock
                                Text="{Binding Path=StatsViewModel.WroteOff, 
                                              StringFormat={x:Static p:Resources.AS_StrFormat_WrittenOff}}"
                                Margin="5" />
                                <TextBlock
                                Text="{Binding Path=StatsViewModel.Capacity,
                                       StringFormat={x:Static  p:Resources.AS_StrFormat_DailyMax}}"
                                Margin="5" />

                            </StackPanel>
                        </ToolTip>
                    </StackPanel.ToolTip>

                    <TextBlock Text="{Binding Path=StatsViewModel.TfsCapacity, 
                              StringFormat={x:Static p:Resources.AS_StrFormat_DailyWorkTime}}"
                           Margin="10,10,0,0"
                           ToolTip="{x:Static p:Resources.AS_TfsInfo}" />

                    <ProgressBar HorizontalAlignment="Stretch"
                             Maximum="{Binding Path=StatsViewModel.Capacity}"
                             Value="{Binding Path=StatsViewModel.WroteOff}"
                             Margin="5"/>
                </StackPanel>
            </materialDesign:Card>

        </Grid>

    </materialDesign:DialogHost>


</Window>