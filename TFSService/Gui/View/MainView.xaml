<Window x:Class="Gui.View.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Gui.View"
        xmlns:viewmodels="clr-namespace:Gui.ViewModels"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:p="clr-namespace:Gui.Properties"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:behaviors="clr-namespace:Gui.Behaviors"
        xmlns:constants="clr-namespace:TfsAPI.Constants;assembly=TfsAPI"
        xmlns:controls="clr-namespace:Gui.View.Controls"
        xmlns:converters="clr-namespace:Gui.Converters"
        xmlns:wpf="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
        mc:Ignorable="d"
        Height="450" Width="950"
        Title="{Binding Path=StatsViewModel.Name}">

    <Window.DataContext>
        <viewmodels:MainViewModel />
    </Window.DataContext>

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.radiobutton.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <controls:BindProxy x:Key="BindProxy"
                                Data="{Binding}" />

            <converters:SwitchConverter x:Key="IsTaskConverter"
                                        Default="Collapsed">
                <converters:Case If="{x:Static constants:WorkItemTypes.Task}"
                                 Value="Visible" />
            </converters:SwitchConverter>

            <converters:MathCompareConverter x:Key="HoursOverflowConverter"
                                             Operation="More"
                                             TrueValue="{x:Static Visibility.Visible}"
                                             FalseValue="{x:Static Visibility.Collapsed}" />

            <converters:InvertBoolToVisConverter x:Key="InvertBoolToVisConverter" />

            <materialDesign:MathConverter x:Key="MathConverter"
                                          Operation="Multiply" />
        </ResourceDictionary>
    </Window.Resources>

    <materialDesign:DialogHost IsOpen="{Binding Path=IsBusy}">

        <materialDesign:DialogHost.DialogContent>
            <StackPanel Orientation="Vertical"
                        Margin="10">
                <ProgressBar Style="{StaticResource MaterialDesignCircularProgressBar}"
                             Maximum="10"
                             Value="5"
                             IsIndeterminate="True" />
                <TextBlock Text="{x:Static p:Resources.AS_Load}"
                           Margin="0,5" />
            </StackPanel>
        </materialDesign:DialogHost.DialogContent>

        <materialDesign:DialogHost IsOpen="{Binding CodeResponsesViewModel.IsSelectingDate}">
            <materialDesign:DialogHost.DialogContent>
                <local:SelectDateView DataContext="{Binding Path=CodeResponsesViewModel}" />
            </materialDesign:DialogHost.DialogContent>

            <Grid>

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Grid Grid.Column="1"
                      Grid.Row="0"
                      Grid.RowSpan="2"
                      Background="{StaticResource MaterialDesignToolBarBackground}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    
                    <wpf:AngularGauge HorizontalAlignment="Right"
                                      Grid.Column="1"
                                      Grid.RowSpan="2"
                                      VerticalAlignment="Top"
                                      ToolTip="{x:Static p:Resources.AS_TodayWriteOff}"
                                      Margin="20 0"
                                      Height="80"
                                      Width="80"
                                      Panel.ZIndex="1"
                                      FromValue="0"
                                      LabelsStep="2"
                                      TicksStep="1"
                                      Background="{StaticResource MaterialDesignToolBarBackground}"
                                      Foreground="{StaticResource MaterialDesignBackground}"
                                      TicksForeground="{StaticResource MaterialDesignBackground}"
                                      ToValue="{Binding Path=StatsViewModel.Capacity, Converter={StaticResource MathConverter}, ConverterParameter=2}"
                                      Value="{Binding Path=StatsViewModel.WroteOff}"
                                      SectionsInnerRadius=".5">

                        <wpf:AngularGauge.Sections>
                            <wpf:AngularSection Fill="Red"
                                                FromValue="0"
                                                ToValue="{Binding StatsViewModel.Capacity, Converter={StaticResource MathConverter}, ConverterParameter=0.3}" />

                            <wpf:AngularSection Fill="Orange"
                                                FromValue="{Binding StatsViewModel.Capacity, Converter={StaticResource MathConverter}, ConverterParameter=0.3}"
                                                ToValue="{Binding StatsViewModel.Capacity, Converter={StaticResource MathConverter}, ConverterParameter=0.8}" />

                            <wpf:AngularSection Fill="Green"
                                                FromValue="{Binding StatsViewModel.Capacity, Converter={StaticResource MathConverter}, ConverterParameter=0.8}"
                                                ToValue="{Binding Path=StatsViewModel.Capacity, Converter={StaticResource MathConverter}, ConverterParameter=1.2}" />

                            <wpf:AngularSection Fill="Orange"
                                                FromValue="{Binding Path=StatsViewModel.Capacity, Converter={StaticResource MathConverter}, ConverterParameter=1.2}"
                                                ToValue="{Binding StatsViewModel.Capacity, Converter={StaticResource MathConverter}, ConverterParameter=2}" />
                        </wpf:AngularGauge.Sections>
                    </wpf:AngularGauge>
                    
                    <controls:CapacitySettingsView Grid.Row="0"
                                                   Grid.Column="0"
                                                   HorizontalAlignment="Left"
                                                   Capacity="{Binding Path=StatsViewModel.Capacity}"/>
                </Grid>

                <Menu FontSize="12"
                      Background="{StaticResource MaterialDesignToolBarBackground}"
                      Grid.Row="0">
                    <MenuItem Header="{x:Static p:Resources.AS_Program}">
                        <MenuItem Header="{x:Static p:Resources.AS_Update}"
                                  Command="{Binding Path=UpdateCommand}">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="Update" />
                            </MenuItem.Icon>
                        </MenuItem>

                        <MenuItem Header="{x:Static p:Resources.AS_History}"
                                  Command="{Binding Path=ShowMonthlyCommand}">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="History" />
                            </MenuItem.Icon>
                        </MenuItem>

                        <MenuItem Header="{x:Static p:Resources.AS_Treng_History}"
                                  Command="{Binding Path=ShowTrendCommand}">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="TrackChanges" />
                            </MenuItem.Icon>
                        </MenuItem>

                        <MenuItem Header="{x:Static p:Resources.AS_BuidlQueue_Button}"
                                  Command="{Binding Path=ShowBuildQueueCommand}">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="Queue" />
                            </MenuItem.Icon>
                        </MenuItem>

                        <MenuItem Header="{x:Static p:Resources.AS_AutoObserve}"
                                  Command="{Binding Path=ShowObserveCommand}">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="TimerSand" />
                            </MenuItem.Icon>
                        </MenuItem>
                        
                        <MenuItem Header="Code Requests"
                                  Command="{Binding Path=ShowCodeRequestsCommand}">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="VsCode" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>

                    <MenuItem Header="{x:Static p:Resources.AS_Actions}">
                        <MenuItem Header="{x:Static p:Resources.AS_WriteOffHours}"
                                  Command="{Binding Path=WriteOffHoursCommand}" />
                        <!-- <Separator /> -->
                        <!-- <MenuItem Header="{x:Static p:Resources.AS_ObservableItems_Title}" -->
                        <!--           Command="{Binding Path=ObservableItemsCommand}" /> -->
                        <!-- <Separator /> -->
                        <!-- <MenuItem Header="{x:Static p:Resources.AS_CloseCompletedReviewes}" -->
                        <!--           Command="{Binding Path=CodeResponsesViewModel.CloseReviewes}" /> -->
                        <!-- -->
                        <!-- <MenuItem Header="{x:Static p:Resources.AS_CloseOldReviews}" -->
                        <!--           Command="{Binding Path=CodeResponsesViewModel.CloseOldRequests}" -->
                        <!--           CommandParameter="{x:Null}" /> -->


                    </MenuItem>
                    
                    <MenuItem Header="{x:Static p:Resources.AS_About}"
                              Command="{Binding Path=AboutCommand}"/>

                    <!-- <MenuItem Header="{x:Static p:Resources.AS_Settings}" -->
                    <!--           Command="{Binding Path=SettingsCommand}" /> -->

                </Menu>

                <ToolBar Grid.Row="1"
                         >
                    <local:FilterView DataContext="{Binding Path=StatsViewModel.Filter}"
                                      DockPanel.Dock="Left"
                                      ToolTip="{x:Static p:Resources.AS_WorkItemFilter}"
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Center"
                                      Margin="5" />

                    <Separator />

                    <RadioButton Style="{StaticResource RadioButton.Toolbar.Style}"
                                 ToolTip="{x:Static p:Resources.AP_MainView_List_ToolTip}"

                                 IsChecked="{Binding Path=ViewMode,
                                                      Converter={StaticResource EnumBooleanConverter},
                                                      ConverterParameter={x:Static viewmodels:VisibleMode.List}}">
                        <materialDesign:PackIcon Kind="FormatListBulleted" />
                    </RadioButton>

                    <RadioButton Style="{StaticResource RadioButton.Toolbar.Style}"
                                 materialDesign:RippleAssist.IsDisabled="True"
                                 ToolTip="{x:Static p:Resources.AP_MainView_Table_ToolTip}"

                                 IsChecked="{Binding Path=ViewMode,
                                                      Converter={StaticResource EnumBooleanConverter},
                                                      ConverterParameter={x:Static viewmodels:VisibleMode.Table}}">
                        <materialDesign:PackIcon Kind="TableLarge" />
                    </RadioButton>

                    <Separator />

                    <Button Style="{StaticResource MaterialDesignToolButton}"
                            Command="{Binding Path=UpdateCommand}"
                            ToolTip="{x:Static p:Resources.AS_Update}">
                        <materialDesign:PackIcon Kind="Update" />
                    </Button>

                </ToolBar>

                <controls:WorkItemsView Grid.Row="2"
                                        Grid.ColumnSpan="2"
                                        ViewMode="{Binding Path=ViewMode}"
                                        Items="{Binding Path=StatsViewModel.MyItems}">
                    <controls:WorkItemsView.ItemMenu>
                        <ContextMenu>
                            <MenuItem Header="{x:Static p:Resources.AS_WriteOffHours}"
                                      Visibility="{Binding Path=Item.Type.Name, Converter={StaticResource IsTaskConverter}}"
                                      Command="{Binding Source={StaticResource BindProxy}, Path=Data.WriteOffHoursCommand}"
                                      CommandParameter="{Binding}" />

                            <MenuItem Header="{x:Static p:Resources.AS_MainView_ItemMenu_Ignore}"
                                      Command="{Binding Source={StaticResource BindProxy}, Path=Data.AddToIgnoredCommand}"
                                      CommandParameter="{Binding}" />
                        </ContextMenu>
                    </controls:WorkItemsView.ItemMenu>
                </controls:WorkItemsView>

                <!-- <materialDesign:Card Grid.Row="3"> -->
                <!-- -->
                <!--     <StackPanel Orientation="Vertical" -->
                <!--                 Background="Transparent" -->
                <!--                 Margin="5,0,5,10"> -->
                <!--         <StackPanel.ToolTip> -->
                <!--             <ToolTip> -->
                <!--                 <StackPanel Orientation="Vertical" -->
                <!--                             Margin="5"> -->
                <!-- -->
                <!--                     <TextBlock -->
                <!--                         Text="{Binding Path=StatsViewModel.WroteOff,  -->
                <!--                               StringFormat={x:Static p:Resources.AS_StrFormat_WrittenOff}}" -->
                <!--                         Margin="5" /> -->
                <!--                     <TextBlock -->
                <!--                         Text="{Binding Path=StatsViewModel.Capacity, -->
                <!--                        StringFormat={x:Static  p:Resources.AS_StrFormat_DailyMax}}" -->
                <!--                         Margin="5" /> -->
                <!-- -->
                <!--                 </StackPanel> -->
                <!--             </ToolTip> -->
                <!--         </StackPanel.ToolTip> -->
                <!-- -->
                <!--         <TextBlock -->
                <!--             Text="{Binding Path=StatsViewModel.TfsCapacity,  -->
                <!--               StringFormat={x:Static p:Resources.AS_StrFormat_DailyWorkTime}}" -->
                <!--             Margin="10,10,0,0" -->
                <!--             ToolTip="{x:Static p:Resources.AS_TfsInfo}" /> -->
                <!-- -->
                <!-- -->
                <!--         <Grid> -->
                <!--             <ProgressBar x:Name="RegularBar" -->
                <!--                          HorizontalAlignment="Stretch" -->
                <!--                          Maximum="{Binding Path=StatsViewModel.Capacity}" -->
                <!--                          Value="{Binding Path=StatsViewModel.WroteOff}" -->
                <!--                          Foreground="DarkGreen" -->
                <!--                          Margin="5"> -->
                <!--                 <ProgressBar.Visibility> -->
                <!--                     <MultiBinding Converter="{StaticResource HoursOverflowConverter}"> -->
                <!--                         <Binding Path="StatsViewModel.Capacity" /> -->
                <!--                         <Binding Path="StatsViewModel.WroteOff" /> -->
                <!--                     </MultiBinding> -->
                <!--                 </ProgressBar.Visibility> -->
                <!--             </ProgressBar> -->
                <!-- -->
                <!--             <ProgressBar HorizontalAlignment="Stretch" -->
                <!--                          Maximum="{Binding Path=StatsViewModel.WroteOff}" -->
                <!--                          Value="{Binding Path=StatsViewModel.Capacity}" -->
                <!--                          Background="DarkOrange" -->
                <!--                          Foreground="DarkGreen" -->
                <!--                          Margin="5" -->
                <!--                          Visibility="{Binding ElementName=RegularBar, Path=IsVisible, Converter={StaticResource InvertBoolToVisConverter}}" /> -->
                <!--         </Grid> -->
                <!-- -->
                <!--     </StackPanel> -->
                <!-- </materialDesign:Card> -->

            </Grid>

        </materialDesign:DialogHost>

    </materialDesign:DialogHost>

</Window>