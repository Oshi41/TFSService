<UserControl x:Class="Gui.View.ScheduleView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Gui.View"
             xmlns:dialogViewModels="clr-namespace:Gui.ViewModels.DialogViewModels"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:converters="clr-namespace:Gui.Converters"
             xmlns:p="clr-namespace:Gui.Properties"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:b="clr-namespace:Gui.Behaviors"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance Type={x:Type dialogViewModels:CheckinHistoryViewModel}}">

    <UserControl.Resources>
        <ResourceDictionary>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

            <converters:HoursColorConverter x:Key="HoursColorConverter"
                                            NormalColor="Transparent"
                                            OverflowColor="DarkGreen"
                                            LessColor="IndianRed"
                                            ZeroColor="DarkRed"/>

        </ResourceDictionary>
    </UserControl.Resources>

    <materialDesign:DialogHost IsOpen="{Binding Path=Schedule.IsBusy}">
        
        <materialDesign:DialogHost.DialogContent>
            <StackPanel Orientation="Vertical"
                        Margin="10">
                <ProgressBar Style="{StaticResource MaterialDesignCircularProgressBar}"
                             Maximum="10" 
                             Value="5"
                             IsIndeterminate="True"/>
                <TextBlock Text="{x:Static p:Resources.AS_Load}"
                           Margin="0,5"/>
            </StackPanel>
        </materialDesign:DialogHost.DialogContent>
        
        <Grid Background="White">
            <Calendar SelectedDate="{Binding Path=Month, Mode=TwoWay}"
                      DisplayDateChanged="SelectFirst"
                      SelectionMode="SingleDate"
                      CalendarDayButtonStyle="{StaticResource MaterialBased.CalendarButton.Style}">
                <i:Interaction.Behaviors>
                    <b:CalendarItemSourceBehavior
                        Items="{Binding Path=Schedule.Days}"/>
                </i:Interaction.Behaviors>
            </Calendar>
        </Grid>
    </materialDesign:DialogHost>

    <!--<Grid Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <TextBlock Text="Выберите дату"/>

        <DatePicker Grid.Row="1"
                    Margin="7"
                    SelectedDate="{Binding Path=Month, Mode=TwoWay}"/>

        <materialDesign:DialogHost Grid.Row="2"
                                   IsOpen="{Binding Path=Schedule.IsBusy}">
            <materialDesign:DialogHost.DialogContent>
                <StackPanel HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Orientation="Vertical"
                            Margin="7">
                    <TextBlock Text="{x:Static p:Resources.AS_Load}" 
                               Margin="7"/>
                    <ProgressBar IsIndeterminate="True"
                                 Margin="7"/>
                </StackPanel>
            </materialDesign:DialogHost.DialogContent>

            <DataGrid ItemsSource="{Binding Path=Schedule.Days}"
                      IsReadOnly="True"
                      RowDetailsVisibilityMode="VisibleWhenSelected"
                      SelectionMode="Single"
                      SelectionUnit="FullRow"
                      AutoGenerateColumns="False">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="День"
                                        Binding="{Binding Path=Time.Day}"/>
                    <DataGridTextColumn Header="Списанные часы"
                                        Binding="{Binding Path=Hours, StringFormat={}{0} ч}"/>
                    <DataGridTextColumn Header="День недели"
                                        Binding="{Binding Path=Time.DayOfWeek}"/>

                    -->
    <!--<DataGridTemplateColumn>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}"
                                          IsChecked="{Binding Path=IsExpanded, Mode=TwoWay}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>-->
    <!--
                </DataGrid.Columns>

                <DataGrid.RowDetailsTemplate>
                    <DataTemplate>
                        <DataGrid ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=DataGrid},
                        Path=SelectedItem.Checkins}"
                              MaxHeight="300"
                              HorizontalScrollBarVisibility="Auto"
                              VerticalScrollBarVisibility="Auto"
                              AutoGenerateColumns="False"
                              IsReadOnly="True">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="ID элемента"
                                                Binding="{Binding Path=Key.WorkItem.Id}"/>

                                <DataGridTextColumn Header="Время списания"
                                                Binding="{Binding Path=Key.Fields[ChangedDate].Value, StringFormat={}{0:g}}"/>

                                <DataGridTextColumn Header="Списано"
                                                Binding="{Binding Value, StringFormat={}{0} ч}"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </DataTemplate>
                </DataGrid.RowDetailsTemplate>

                <DataGrid.RowStyle>
                    <Style TargetType="{x:Type DataGridRow}"
                           BasedOn="{StaticResource {x:Type DataGridRow}}">
                        <Setter Property="Background"
                                Value="{Binding Converter={StaticResource HoursColorConverter}}"/>
                    </Style>

                </DataGrid.RowStyle>

            </DataGrid>
        </materialDesign:DialogHost>

    </Grid>-->


</UserControl>

